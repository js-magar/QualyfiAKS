{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "8706238888363237663"
    }
  },
  "parameters": {
    "entraGroupID": {
      "type": "string"
    },
    "acrRoleDefName": {
      "type": "string"
    },
    "contributorRoleDefName": {
      "type": "string"
    },
    "readerRoleDefName": {
      "type": "string"
    }
  },
  "variables": {
    "RGLocation": "[resourceGroup().location]",
    "acrName": "aksacrjash",
    "acrSKU": "Basic",
    "vnetAddressPrefix": "10",
    "virtualNetworkName": "virtualNetwork",
    "appGatewaySubnetAddressPrefix": "1",
    "appGatewaySubnetName": "AppgwSubnet",
    "appGatewayPIPName": "[format('pip-appGateway-jash-{0}-001', variables('RGLocation'))]",
    "appGatewayName": "[format('appGateway-jash-{0}-001', variables('RGLocation'))]",
    "aksSubnetAddressPrefix": "2",
    "aksClusterName": "aksclusterjash",
    "aksSubnetName": "aksClusterSubnet",
    "natGatewayName": "[format('{0}NatGateway', variables('aksClusterName'))]",
    "natGatewayPIPPrefixName": "[format('{0}PIPPrefix', variables('aksClusterName'))]",
    "bastionSubnetAddressPrefix": "3",
    "bastionName": "[format('bastion-jash-{0}-001', variables('RGLocation'))]",
    "bastionSubnetName": "AzureBastionSubnet",
    "poolSubnetAddressPrefix": "4",
    "poolSubnetName": "PoolSubnet",
    "systemPoolSubnetName": "SystemPoolSubnet",
    "appPoolSubnetName": "AppPoolSubnet",
    "podSubnetAddressPrefix": "5",
    "podSubnetName": "PodSubnet"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "LAWAcrResource",
      "location": "[variables('RGLocation')]",
      "properties": {
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPPrefixes",
      "apiVersion": "2022-05-01",
      "name": "[variables('natGatewayPIPPrefixName')]",
      "location": "[variables('RGLocation')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "prefixLength": 28,
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/natGateways",
      "apiVersion": "2022-05-01",
      "name": "[variables('natGatewayName')]",
      "location": "[variables('RGLocation')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "idleTimeoutInMinutes": 4,
        "publicIpPrefixes": [
          {
            "id": "[resourceId('Microsoft.Network/publicIPPrefixes', variables('natGatewayPIPPrefixName'))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPPrefixes', variables('natGatewayPIPPrefixName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-05-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('RGLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[format('{0}.0.0.0/8', variables('vnetAddressPrefix'))]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('systemPoolSubnetName')]",
            "properties": {
              "addressPrefix": "[format('{0}.{1}.0/24', variables('vnetAddressPrefix'), variables('poolSubnetAddressPrefix'))]"
            }
          },
          {
            "name": "[variables('appGatewaySubnetName')]",
            "properties": {
              "addressPrefix": "[format('{0}.1.{1}.0/24', variables('vnetAddressPrefix'), variables('appGatewaySubnetAddressPrefix'))]"
            }
          },
          {
            "name": "[variables('aksSubnetName')]",
            "properties": {
              "addressPrefix": "[format('{0}.1.{1}.0/24', variables('vnetAddressPrefix'), variables('aksSubnetAddressPrefix'))]",
              "natGateway": {
                "id": "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
              }
            }
          },
          {
            "name": "[variables('bastionSubnetName')]",
            "properties": {
              "addressPrefix": "[format('{0}.{1}.0/24', variables('vnetAddressPrefix'), variables('bastionSubnetAddressPrefix'))]"
            }
          },
          {
            "name": "[variables('poolSubnetName')]",
            "properties": {
              "addressPrefix": "[format('{0}.{1}.0/24', variables('vnetAddressPrefix'), variables('poolSubnetAddressPrefix'))]"
            }
          },
          {
            "name": "[variables('podSubnetName')]",
            "properties": {
              "addressPrefix": "[format('{0}.{1}.0/24', variables('vnetAddressPrefix'), variables('podSubnetAddressPrefix'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appGatewayDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appGatewaySubnetName": {
            "value": "[variables('appGatewaySubnetName')]"
          },
          "appGatewayPIPName": {
            "value": "[variables('appGatewayPIPName')]"
          },
          "appGatewayName": {
            "value": "[variables('appGatewayName')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "14847398931502236595"
            }
          },
          "parameters": {
            "appGatewaySubnetName": {
              "type": "string"
            },
            "appGatewayPIPName": {
              "type": "string"
            },
            "appGatewayName": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string"
            }
          },
          "variables": {
            "RGLocation": "[resourceGroup().location]",
            "applicationGatewayUserDefinedManagedIdentityName": "[format('{0}ManagedIdentity', parameters('appGatewayName'))]",
            "applicationGatewayUserDefinedManagedIdentityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('applicationGatewayUserDefinedManagedIdentityName'))]",
            "appGWFIPConfigName": "appGatewayFrontendConfig",
            "appGWFPortName": "frontendHttpPort80",
            "appGWhttpListenerName": "appGWHttpListener",
            "appGWBAddressPoolName": "backendAddressPool",
            "appGWBHttpSettingsName": "backendHttpPort80",
            "wafPolicyName": "[format('{0}-WafPolicy', parameters('appGatewayName'))]",
            "wafPolicyFileUploadLimitInMb": 100,
            "wafPolicyMaxRequestBodySizeInKb": 128,
            "wafPolicyRequestBodyCheck": true,
            "wafPolicyRuleSetType": "OWASP",
            "wafPolicyRuleSetVersion": "3.1"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-05-01",
              "name": "[parameters('appGatewayPIPName')]",
              "location": "[variables('RGLocation')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[variables('applicationGatewayUserDefinedManagedIdentityName')]",
              "location": "[variables('RGLocation')]"
            },
            {
              "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
              "apiVersion": "2023-05-01",
              "name": "[variables('wafPolicyName')]",
              "location": "[variables('RGLocation')]",
              "properties": {
                "customRules": [
                  {
                    "name": "BlockMe",
                    "priority": 1,
                    "ruleType": "MatchRule",
                    "action": "Block",
                    "matchConditions": [
                      {
                        "matchVariables": [
                          {
                            "variableName": "QueryString"
                          }
                        ],
                        "operator": "Contains",
                        "negationConditon": false,
                        "matchValues": [
                          "blockme"
                        ]
                      }
                    ]
                  },
                  {
                    "name": "BlockEvilBot",
                    "priority": 2,
                    "ruleType": "MatchRule",
                    "action": "Block",
                    "matchConditions": [
                      {
                        "matchVariables": [
                          {
                            "variableName": "RequestHeaders",
                            "selector": "User-Agent"
                          }
                        ],
                        "operator": "Contains",
                        "negationConditon": false,
                        "matchValues": [
                          "evilbot"
                        ],
                        "transforms": [
                          "Lowercase"
                        ]
                      }
                    ]
                  }
                ],
                "policySettings": {
                  "requestBodyCheck": "[variables('wafPolicyRequestBodyCheck')]",
                  "maxRequestBodySizeInKb": "[variables('wafPolicyMaxRequestBodySizeInKb')]",
                  "fileUploadLimitInMb": "[variables('wafPolicyFileUploadLimitInMb')]",
                  "mode": "Prevention",
                  "state": "Enabled"
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "[variables('wafPolicyRuleSetType')]",
                      "ruleSetVersion": "[variables('wafPolicyRuleSetVersion')]"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2023-05-01",
              "name": "[parameters('appGatewayName')]",
              "location": "[variables('RGLocation')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', variables('applicationGatewayUserDefinedManagedIdentityId'))]": {}
                }
              },
              "properties": {
                "sku": {
                  "name": "WAF_v2",
                  "tier": "WAF_v2"
                },
                "backendAddressPools": [
                  {
                    "name": "[variables('appGWBAddressPoolName')]"
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "[variables('appGWBHttpSettingsName')]",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "cookieBasedAffinity": "Disabled"
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "[variables('appGWFIPConfigName')]",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('appGatewayPIPName'))]"
                      }
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "[variables('appGWFPortName')]",
                    "properties": {
                      "port": 80
                    }
                  }
                ],
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIPConfig",
                    "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('appGatewaySubnetName'))]"
                      }
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "[variables('appGWhttpListenerName')]",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('appGatewayName'), variables('appGWFIPConfigName'))]"
                      },
                      "frontendPort": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('appGatewayName'), variables('appGWFPortName'))]"
                      },
                      "protocol": "Http"
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "appGWRoutingRule",
                    "properties": {
                      "ruleType": "Basic",
                      "priority": 110,
                      "httpListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('appGatewayName'), variables('appGWhttpListenerName'))]"
                      },
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('appGatewayName'), variables('appGWBAddressPoolName'))]"
                      },
                      "backendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('appGatewayName'), variables('appGWBHttpSettingsName'))]"
                      }
                    }
                  }
                ],
                "probes": [
                  {
                    "name": "defaultHttpProbe",
                    "properties": {
                      "protocol": "Http",
                      "path": "/",
                      "interval": 30,
                      "timeout": 30,
                      "unhealthyThreshold": 3,
                      "pickHostNameFromBackendHttpSettings": true,
                      "minServers": 0
                    }
                  },
                  {
                    "name": "defaultHttpsProbe",
                    "properties": {
                      "protocol": "Https",
                      "path": "/",
                      "interval": 30,
                      "timeout": 30,
                      "unhealthyThreshold": 3,
                      "pickHostNameFromBackendHttpSettings": true,
                      "minServers": 0
                    }
                  }
                ],
                "autoscaleConfiguration": {
                  "minCapacity": 0,
                  "maxCapacity": 10
                },
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('wafPolicyName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('appGatewayPIPName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('applicationGatewayUserDefinedManagedIdentityName'))]",
                "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', variables('wafPolicyName'))]"
              ]
            }
          ],
          "outputs": {
            "appGatwayId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName'))]"
            },
            "appGatwayUDMId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('applicationGatewayUserDefinedManagedIdentityName'))]"
            },
            "appGatwayUDMName": {
              "type": "string",
              "value": "[variables('applicationGatewayUserDefinedManagedIdentityName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appContainerRegistryDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acrName": {
            "value": "[variables('acrName')]"
          },
          "logAnalyticsName": {
            "value": "LAWAcrResource"
          },
          "acrSKU": {
            "value": "[variables('acrSKU')]"
          },
          "acrPullRDName": {
            "value": "[parameters('acrRoleDefName')]"
          },
          "aksResourceID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aksClusterDeployment'), '2022-09-01').outputs.aksClusterId.value]"
          },
          "contributorRoleDefName": {
            "value": "[parameters('contributorRoleDefName')]"
          },
          "readerRoleDefName": {
            "value": "[parameters('readerRoleDefName')]"
          },
          "aksClusterUserDefinedManagedIdentityName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aksClusterDeployment'), '2022-09-01').outputs.aksClusterUserDefinedManagedIdentityName.value]"
          },
          "applicationGatewayUserDefinedManagedIdentityName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appGatewayDeployment'), '2022-09-01').outputs.appGatwayUDMName.value]"
          },
          "aksClusterName": {
            "value": "[variables('aksClusterName')]"
          },
          "appGatewayName": {
            "value": "[variables('appGatewayName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "14110488474499970305"
            }
          },
          "parameters": {
            "acrName": {
              "type": "string"
            },
            "acrSKU": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "aksResourceID": {
              "type": "string"
            },
            "acrPullRDName": {
              "type": "string"
            },
            "contributorRoleDefName": {
              "type": "string"
            },
            "readerRoleDefName": {
              "type": "string"
            },
            "aksClusterUserDefinedManagedIdentityName": {
              "type": "string"
            },
            "applicationGatewayUserDefinedManagedIdentityName": {
              "type": "string"
            },
            "aksClusterName": {
              "type": "string"
            },
            "appGatewayName": {
              "type": "string"
            }
          },
          "variables": {
            "RGLocation": "[resourceGroup().location]",
            "aksContributorRoleAssignmentName": "[guid(format('{0}{1}{2}', resourceGroup().id, parameters('aksClusterUserDefinedManagedIdentityName'), parameters('aksClusterName')))]",
            "appGwContributorRoleAssignmentName": "[guid(format('{0}{1}{2}', resourceGroup().id, parameters('applicationGatewayUserDefinedManagedIdentityName'), parameters('appGatewayName')))]",
            "acrPullRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('acrPullRDName'))]",
            "contributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('contributorRoleDefName'))]",
            "readerRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('readerRoleDefName'))]",
            "acrPullRoleAssignmentName": "[format('{0}', guid(format('{0}acrPullRoleAssignment', resourceGroup().id)))]"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-07-01",
              "name": "[parameters('acrName')]",
              "location": "[variables('RGLocation')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "adminUserEnabled": false,
                "policies": {
                  "quarantinePolicy": {
                    "status": "disabled"
                  },
                  "trustPolicy": {
                    "type": "Notary",
                    "status": "disabled"
                  },
                  "retentionPolicy": {
                    "days": 7,
                    "status": "disabled"
                  },
                  "exportPolicy": {
                    "status": "enabled"
                  }
                },
                "encryption": {
                  "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices",
                "zoneRedundancy": "Disabled"
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('acrName'))]",
              "name": "default",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "metrics": [
                  {
                    "timeGrain": "PT1M",
                    "category": "AllMetrics",
                    "enabled": true
                  }
                ],
                "logs": [
                  {
                    "category": "ContainerRegistryRepositoryEvents",
                    "enabled": true
                  },
                  {
                    "category": "ContainerRegistryLoginEvents",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[variables('acrPullRoleAssignmentName')]",
              "properties": {
                "roleDefinitionId": "[variables('acrPullRoleId')]",
                "principalId": "[reference(parameters('aksResourceID'), '2023-08-01', 'Full').properties.identityProfile.kubeletidentity.objectId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('aksContributorRoleAssignmentName')]",
              "properties": {
                "roleDefinitionId": "[variables('contributorRoleId')]",
                "description": "Assign the cluster user-defined managed identity contributor role on the resource group.",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('aksClusterUserDefinedManagedIdentityName')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('appGwContributorRoleAssignmentName')]",
              "properties": {
                "roleDefinitionId": "[variables('contributorRoleId')]",
                "principalId": "[reference(parameters('aksResourceID'), '2023-08-01', 'Full').properties.addonProfiles.ingressApplicationGateway.identity.objectId]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'aksClusterDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'appGatewayDeployment')]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', 'LAWAcrResource')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aksClusterDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aksClusterName": {
            "value": "[variables('aksClusterName')]"
          },
          "entraGroupID": {
            "value": "[parameters('entraGroupID')]"
          },
          "logAnalyticsWorkspaceID": {
            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', 'LAWAcrResource')]"
          },
          "appGatewayID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appGatewayDeployment'), '2022-09-01').outputs.appGatwayId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "14937566429601128042"
            }
          },
          "parameters": {
            "aksClusterName": {
              "type": "string"
            },
            "entraGroupID": {
              "type": "string"
            },
            "logAnalyticsWorkspaceID": {
              "type": "string"
            },
            "appGatewayID": {
              "type": "string"
            }
          },
          "variables": {
            "RGLocation": "[resourceGroup().location]",
            "linuxAdminUsername": "username",
            "linuxAdminSSH": "ssh",
            "aksClusterUserDefinedManagedIdentityName": "[format('{0}ManagedIdentity', parameters('aksClusterName'))]",
            "aadPodIdentityUserDefinedManagedIdentityName": "[format('{0}AadPodManagedIdentity', parameters('aksClusterName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[variables('aksClusterUserDefinedManagedIdentityName')]",
              "location": "[variables('RGLocation')]"
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[variables('aadPodIdentityUserDefinedManagedIdentityName')]",
              "location": "[variables('RGLocation')]"
            },
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2023-08-01",
              "name": "[parameters('aksClusterName')]",
              "location": "[variables('RGLocation')]",
              "sku": {
                "name": "Base",
                "tier": "Free"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "kubernetesVersion": "1.26.6",
                "enableRBAC": true,
                "dnsPrefix": "akscluster-jash",
                "disableLocalAccounts": true,
                "aadProfile": {
                  "managed": true,
                  "adminGroupObjectIDs": [
                    "[format('{0}', parameters('entraGroupID'))]"
                  ],
                  "tenantID": "[subscription().tenantId]"
                },
                "agentPoolProfiles": [
                  {
                    "name": "systempool",
                    "count": 1,
                    "vmSize": "Standard_DS2_v2",
                    "maxPods": 30,
                    "maxCount": 20,
                    "minCount": 1,
                    "enableAutoScaling": true,
                    "osType": "Linux",
                    "osSKU": "CBLMariner",
                    "mode": "System"
                  },
                  {
                    "name": "apppool",
                    "count": 1,
                    "vmSize": "Standard_DS2_v2",
                    "maxPods": 30,
                    "maxCount": 20,
                    "minCount": 1,
                    "enableAutoScaling": true,
                    "osType": "Linux",
                    "osSKU": "CBLMariner",
                    "mode": "System"
                  }
                ],
                "networkProfile": {
                  "loadBalancerSku": "Standard",
                  "outboundType": "loadBalancer"
                },
                "addonProfiles": {
                  "omsagent": {
                    "enabled": true,
                    "config": {
                      "logAnalyticsWorkspaceResourceID": "[parameters('logAnalyticsWorkspaceID')]"
                    }
                  },
                  "aciConnectorLinux": {
                    "enabled": false
                  },
                  "azurepolicy": {
                    "enabled": true,
                    "config": {
                      "version": "v2"
                    }
                  },
                  "kubeDashboard": {
                    "enabled": false
                  },
                  "ingressApplicationGateway": {
                    "config": {
                      "applicationGatewayId": "[parameters('appGatewayID')]"
                    },
                    "enabled": true
                  }
                }
              }
            }
          ],
          "outputs": {
            "aksClusterId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksClusterName'))]"
            },
            "aksClusterUserDefinedManagedIdentityName": {
              "type": "string",
              "value": "[variables('aksClusterUserDefinedManagedIdentityName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appGatewayDeployment')]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', 'LAWAcrResource')]"
      ]
    }
  ]
}